---
- name: Install which
  pacman:
    name: which
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install xdg-user-dirs
  pacman:
    name: xdg-user-dirs
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install usbutils
  pacman:
    name: usbutils
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install base-devel tools
  pacman:
    name: base-devel
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install build-essential tools
  apt:
    name: build-essential
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install linux-firmware
  apt:
    name: firmware-linux
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install dash for faster sh scripts
  pacman:
    name: dash
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install dash for faster sh scripts
  apt:
    name: dash
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Ensures dash is used for shell scripts instead of bash
  file:
    src: "/usr/bin/dash"
    dest: "/usr/bin/sh"
    state: link
    force: yes
  become: true

- name: Install basic network utils such as hostname
  pacman:
    name: inetutils
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install ipcalc - IPV4 CIDR calculator
  pacman:
    name: ipcalc
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install ipcalc - IPV4 CIDR calculator
  apt:
    name: ipcalc
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install exa
  pacman:
    name: exa
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install exa
  apt:
    name: exa
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Installs downgrade to easily downgrade packages in arch
  kewlfft.aur.aur:
    use: paru
    name: downgrade
  when: ansible_distribution == "Archlinux"

- name: Make sure config folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.config"
    state: directory
    mode: '0755'

- name: Make sure cache folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.cache"
    state: directory
    mode: '0755'

- name: Make sure local folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local"
    state: directory
    mode: '0755'

- name: Make sure bin folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local/bin"
    state: directory
    mode: '0755'

- name: Make sure share folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local/share"
    state: directory
    mode: '0755'

- name: Make sure share folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local/var"
    state: directory
    mode: '0755'

- name: Make sure share folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local/var/log"
    state: directory
    mode: '0755'

- name: Install jq to parse JSON
  pacman:
    name: jq
    state: present
  when: ansible_distribution == "Archlinux"

- name: Install jq to parse JSON
  apt:
    name: jq
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Install htop
  pacman:
    name: htop
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install htop
  apt:
    name: htop
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Installs gtop
  pacman:
    name: gtop
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Installs bpytop
  pacman:
    name: bpytop
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Installs bpytop
  apt:
    name: bpytop
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Enable NTP with systemd-timesyncd
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: systemd-timesyncd
  become: true

- name: Installs bitwarden cli
  kewlfft.aur.aur:
    use: paru
    name: bitwarden-cli
  when: ansible_distribution == "Archlinux"

- name: Enable makepkg to compile in native mode
  ansible.builtin.copy:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/etc/makepkg.conf"
    dest: /etc/makepkg.conf
    owner: root
    group: root
    mode: '0644'
  notify:
  - Update pacman database
  become: true
  when: ansible_distribution == "Archlinux"

- name: Configure pacman
  ansible.builtin.copy:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/etc/pacman.conf"
    dest: /etc/pacman.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install fzf
  pacman:
    name: fzf
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install fzf
  apt:
    name: fzf
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Install unzip
  pacman:
    name: unzip
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Install unzip
  apt:
    name: unzip
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Installs OpenVPN
  pacman:
    name: openvpn
    state: present
  become: true
  when: ansible_distribution == "Archlinux"

- name: Installs OpenVPN
  apt:
    name: openvpn
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Installs OpenVPN SystemD ResolveD
  apt:
    name: openvpn-systemd-resolved
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Installs psmis (killall)
  apt:
    name: psmisc
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Add wget configuration
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/config/wgetrc"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.config/wgetrc"
    state: link
    force: yes
  become: true
