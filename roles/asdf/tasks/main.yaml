---
- name: Ensure curl is installed as requirement for asdf
  pacman:
    name: curl
    state: present
  become: true

- name: Ensure git is installed as requirement for asdf
  pacman:
    name: git
    state: present
  become: true

- name: Ensure pipenv is installed as requirement for direnv
  pacman:
    name: python-pipenv
    state: present
  become: true

- name: Ensure graphviz is installed as requirement
  pacman:
    name: graphviz
    state: present
  become: true

- name: Ensure jq is installed as requirement
  pacman:
    name: jq
    state: present
  become: true

- name: Ensure bzip2 is installed as requirement
  pacman:
    name: bzip2
    state: present
  become: true

- name: Ensure libffi is installed as requirement
  pacman:
    name: libffi
    state: present
  become: true

- name: Ensure xz is installed as requirement
  pacman:
    name: xz
    state: present
  become: true

- name: Ensure ncurses is installed as requirement
  pacman:
    name: ncurses
    state: present
  become: true

- name: Ensure readline is installed as requirement
  pacman:
    name: readline
    state: present
  become: true

- name: Ensure sqlite is installed as requirement
  pacman:
    name: sqlite
    state: present
  become: true

- name: Ensure sqlite is installed as requirement
  pacman:
    name: sqlite
    state: present
  become: true

- name: Ensure openssl is installed as requirement
  pacman:
    name: openssl
    state: present
  become: true

- name: Ensure libxml2 is installed as requirement
  pacman:
    name: libxml2
    state: present
  become: true

- name: Ensure libxmlsecis installed as requirement
  pacman:
    name: xmlsec
    state: present
  become: true

- name: Ensure llvm installed as requirement
  pacman:
    name: llvm
    state: present
  become: true

- name: Ensure base-devel installed as requirement (metapackage, includes things like make)
  pacman:
    name: base-devel
    state: present
  become: true

- name: Ensure networkmanager-fortisslvpn is installed
  pacman:
    name: networkmanager-fortisslvpn
    state: present
  become: true

- name: Ensure tar is installed
  pacman:
    name: tar
    state: present
  become: true

- name: Ensure wget is installed
  pacman:
    name: wget
    state: present
  become: true

- name: Ensure zlib is installed
  pacman:
    name: zlib
    state: present
  become: true

- name: Ensure containerd is installed
  pacman:
    name: containerd
    state: present
  become: true

- name: Ensure docker is installed
  pacman:
    name: docker
    state: present
  become: true

- name: Ensure docker-compose is installed
  pacman:
    name: docker-compose
    state: present
  become: true

- name: Ensure XDG docker config folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.config/docker"
    state: directory
    mode: '0755'

- name: Ensure XDG docker config file exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.config/docker/config.json"
    state: touch
    mode: '0600'

# Git configuration related tasks
- name: Ensure XDG git config folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.config/git"
    state: directory
    mode: '0755'

- name: Ensure XDG git config file exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.config/git/config"
    state: touch
    mode: '0644'

- name: Links config file for gitattributes
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/config/git/gitattributes"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.config/git/gitattributes"
    state: link
    force: yes

- name: Links config file for gittemplate
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/config/git/gittemplate"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.config/git/gittemplate"
    state: link
    force: yes

- name: Configure Git autocrlf
  community.general.git_config:
    name: core.autocrlf
    scope: global
    value: input

- name: Configure Git template
  community.general.git_config:
    name: commit.template
    scope: global
    value: ~/.config/git/gittemplate

- name: Configure Git attributes
  community.general.git_config:
    name: core.attributesfile
    scope: global
    value: ~/.config/git/gitattributes

- name: Configure git to always rewrite https url
  community.general.git_config:
    name: url.ssh://git@github.com.insteadOf
    value: "https://github.com"
    scope: global

# ASDF configuration related tasks
- name: Clone ASDF Git repo
  ansible.builtin.git:
    repo: https://github.com/asdf-vm/asdf.git
    dest: "{{ lookup( 'env', 'HOME' ) }}/.local/asdf"
    single_branch: yes
    version: v0.8.1

- name: Ensure ASDF data folder exists
  ansible.builtin.file:
    path: "{{ lookup( 'env', 'HOME' ) }}/.local/share/asdf"
    state: directory
    mode: '0755'

- name: Links config file for some plugins in ASDF (Python/NPM for the moment)
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/config/asdf"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.config/asdf"
    state: link
    force: yes

- name: Install asdf direnv plugin
  ansible.builtin.script: install_asdf_plugin.sh direnv {{ direnv.version }}

- name: Install asdf websocat plugin
  ansible.builtin.script: install_asdf_plugin.sh websocat {{ websocat.version }}

- name: Install asdf nodeJS
  shell:
    "if ! asdf plugin list | grep -qsxF 'nodejs'; then asdf plugin add nodejs ; fi"

- name: Import ASDF NodeJS GPG keys
  shell:
    "if [[ ! -f '{{ lookup( 'env', 'HOME' ) }}/.local/gnupg/asdf-nodejs.gpg' ]]; then {{ lookup( 'env', 'HOME' ) }}/.local/share/asdf/plugins/nodejs/bin/import-release-team-keyring; fi"


- name: Configure the merge driver for npm
  community.general.git_config:
    name: merge.npm-merge-driver.name
    scope: global
    value: Automatically merge mpm lock files

- name: Configure the merge driver for npm
  community.general.git_config:
    name: merge.npm-merge-driver.driver
    scope: global
    value: npx npm-merge-driver merge %A %O %B %P

- name: Configure the merge driver for Yarn
  community.general.git_config:
    name: merge.yarn-merge-driver.name
    scope: global
    value: Automatically merge yarn lock files

- name: Configure the merge driver for Yarn
  community.general.git_config:
    name: merge.yarn-merge-driver.driver
    scope: global
    value: npx npm-merge-driver merge %A %O %B %P -c yarn

- name: Install asdf python plugin
  shell:
    "if ! asdf plugin list | grep -qsxF 'python'; then asdf plugin add python ; fi"

- name: Install Docker Credentials Helper
  ansible.builtin.script: install_docker_credentials_helper.sh {{ docker_credential_secretservice.version }}

- name: Configure Docker Credentials Helper
  ansible.builtin.script: configure_docker_credential_helper.sh

- name: Download docker-credential-ecr-login
  get_url:
    url: https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.4.0/linux-amd64/docker-credential-ecr-login
    dest: "{{ lookup( 'env' , 'HOME' ) }}/.local/bin/docker-credential-ecr-login"
    mode: '0755'

- name: Links script git-pair
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/local/bin/git-pair"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.local/bin/git-pair"
    state: link
    force: yes

- name: Install asdf python plugin
  shell:
    "git-pair init"

- name: Ensure TMP folder for ASDF exists
  ansible.builtin.file:
    path: /opt/asdf-vm/tmp
    state: directory
    mode: '0777'
  become: true

- name: Links config file for direnv
  file:
    src: "{{ lookup('env', 'ROOTDIR') }}/files/config/direnv"
    dest: "{{ lookup( 'env', 'HOME' ) }}/.config/direnv"
    state: link
    force: yes

# Installs the AWS session manager plugin
- name: Installs AWS session manager plugin
  kewlfft.aur.aur:
    use: paru
    name: aws-session-manager-plugin
